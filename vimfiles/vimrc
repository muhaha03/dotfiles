" Vim with all enhancements
source $VIMRUNTIME/vimrc_example.vim

" Use the internal diff if available.
" Otherwise use the special 'diffexpr' for Windows.
if &diffopt !~# 'internal'
  set diffexpr=MyDiff()
endif
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg1 = substitute(arg1, '!', '\!', 'g')
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg2 = substitute(arg2, '!', '\!', 'g')
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let arg3 = substitute(arg3, '!', '\!', 'g')
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      if empty(&shellxquote)
        let l:shxq_sav = ''
        set shellxquote&
      endif
      let cmd = '"' . $VIMRUNTIME . '\diff"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  let cmd = substitute(cmd, '!', '\!', 'g')
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3
  if exists('l:shxq_sav')
    let &shellxquote=l:shxq_sav
  endif
endfunction

colo murphy
autocmd BufRead,BufNewFile,BufWinEnter *.txt set syntax=sh
autocmd BufRead,BufNewFile,BufWinEnter *.rsp set syntax=sh
au BufReadPost *.txt set syntax=sh
au WinEnter * setlocal cursorline
au WinLeave * setlocal nocursorline
au BufWritePre * :%s/\s\+$//e
set number
set relativenumber
set clipboard=unnamed
set nocompatible
set hid
set writebackup
set nobackup
set tw=250

" for visual
set cursorline
syntax on
set ruler
set wrap
set linebreak
set showcmd
set showmode

"for split
set splitbelow
set splitright

" for search
set hlsearch
set ignorecase
set smartcase
set incsearch

" filetype
filetype on
filetype indent on
filetype plugin on

"nerdtree
nnoremap <silent> <F2> :NERDTreeToggle D: <Enter>
"nnoremap <silent> <F2> :NERDTreeMirror<CR>:NERDTreeFocus<CR> D:\
let NERDTreeMinimalUI=1
"autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif
"let NERDTreeMapOpenInTab='\r'


call plug#begin()
Plug 'preservim/nerdtree'
Plug 'github/copilot.vim'
Plug 'sheerun/vim-polyglot'
call plug#end()
